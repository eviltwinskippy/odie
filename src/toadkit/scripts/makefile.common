TCL_FOSSIL_DB=${DOWNLOAD}/tcl.fos
TK_FOSSIL_DB=${DOWNLOAD}/tk.fos
SQLITE_TARBALL=${DOWNLOAD}/sqlite-autoconf-3071700.tar.gz
SQLITEEXT=${LOCAL_REPO}/lib/sqlite3.7.17/pkgIndex.tcl
TCLLIB_FOSSIL_DB=${DOWNLOAD}/tcllib.fos
TCLLIBEXT=${LOCAL_REPO}/lib/tcllib/pkgIndex.tcl

all: ${ODIEKIT} project

clean:
	rm -rf ${LOCAL_REPO}/bin
	rm -rf ${LOCAL_REPO}/lib
	rm -rf ${LOCAL_REPO}/doc
	rm -rf ${LOCAL_REPO}/share
	rm -rf ${LOCAL_REPO}/zipdir

packages: ${ODIEKIT}
	${TCL_SHELL} scripts/make_module.tcl tcl tk odie canvas3d dtplite tkimg  tklib tkhtml


project: ${ODIEKIT}
	${TCL_SHELL} scripts/make_project.tcl ${SANDBOX}/sample_project

local.tcl:
	cp local.tcl.in local.tcl

${ODIEKIT}: ${TCL_SHELL} ${SQLITEEXT} ${TCLLIBEXT} local.tcl
	${TCL_SHELL} scripts/make_barekit.tcl

${TCLLIB_FOSSIL_DB}:
	mkdir -p ${DOWNLOAD}
	fossil clone http://core.tcl.tk/tcllib ${TCLLIB_FOSSIL_DB}

${TCLLIBEXT}: ${TCLLIB_FOSSIL_DB}
	mkdir -p ${LOCAL_REPO}
	mkdir -p ${SANDBOX}/tcllib
	if [ -f "${SANDBOX}/tcllib/Makefile.in" ] ; \
	then \
		cd ${SANDBOX}/tcllib ; fossil update trunk ; \
	else \
		cd ${SANDBOX}/tcllib ; fossil open ${TCLLIB_FOSSIL_DB} trunk ; \
	fi
	cd ${SANDBOX}/tcllib ; sh ./configure --prefix=${LOCAL_REPO}
	cd ${SANDBOX}/tcllib ; make install
        
${SQLITE_TARBALL}:
	echo 'make dir'
	mkdir -p ${DOWNLOAD}
	cd ${DOWNLOAD} ; curl -OL http://www.sqlite.org/2013/sqlite-autoconf-3071700.tar.gz

${SQLITEEXT}: ${SQLITE_TARBALL}
	mkdir -p ${SANDBOX}
	cd ${SANDBOX} ; tar xfz ${SQLITE_TARBALL}
	cd ${SANDBOX}/sqlite-autoconf-3071700/tea ; ./configure --prefix=${LOCAL_REPO}
	cd ${SANDBOX}/sqlite-autoconf-3071700/tea ; make install

${TCL_FOSSIL_DB}:
	mkdir -p ${DOWNLOAD}
	fossil clone http://core.tcl.tk/tcl ${TCL_FOSSIL_DB}

${TK_FOSSIL_DB}:
	mkdir -p ${DOWNLOAD}
	fossil clone http://core.tcl.tk/tk ${TK_FOSSIL_DB}

${TCL_SHELL}: ${TCL_FOSSIL_DB} ${TK_FOSSIL_DB}
	mkdir -p ${LOCAL_REPO}
	mkdir -p ${SANDBOX}/tcl
	echo "Building ${SANDBOX}/tcl/generic/tcl.h"
	if [ -f "${SANDBOX}/tcl/generic/tcl.h" ] ; \
	then \
		cd ${SANDBOX}/tcl ; fossil update trunk ; \
	else \
		cd ${SANDBOX}/tcl ; fossil open ${TCL_FOSSIL_DB} trunk ; \
	fi
	cd ${SANDBOX}/tcl/${PLATFORM} ; sh ./configure --prefix=${LOCAL_REPO} --enable-shared=no
	cd ${SANDBOX}/tcl/${PLATFORM} ; make install

	mkdir -p ${SANDBOX}/tk
	echo "Building ${SANDBOX}/tk/generic/tk.h"
	if [ -f "${SANDBOX}/tk/generic/tk.h" ] ; \
	then \
		echo "Update" ; cd ${SANDBOX}/tk ; fossil update trunk ; \
	else \
		echo "CREATE" ; cd ${SANDBOX}/tk ; fossil open ${TK_FOSSIL_DB} trunk ; \
	fi
	cd ${SANDBOX}/tk/${PLATFORM} ; sh ./configure --prefix=${LOCAL_REPO} ${EXTRAFLAGS} --enable-shared=no
	cd ${SANDBOX}/tk/${PLATFORM} ; make install
